{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Getting Started","href":"/reference/docs/getting-started","docId":"getting-started","unlisted":false},{"type":"category","label":"Javascript","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Intermediate","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Advanced Functions","href":"/reference/docs/Javascript/Intermediate/advanced-functions","docId":"Javascript/Intermediate/advanced-functions","unlisted":false},{"type":"link","label":"DOM Manipulation","href":"/reference/docs/Javascript/Intermediate/dom-manipulation","docId":"Javascript/Intermediate/dom-manipulation","unlisted":false},{"type":"link","label":"ES6+ Features","href":"/reference/docs/Javascript/Intermediate/es6-features","docId":"Javascript/Intermediate/es6-features","unlisted":false},{"type":"category","label":"Asynchronous Js","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"JS Callbacks","href":"/reference/docs/Javascript/Intermediate/async-javascript/callbacks","docId":"Javascript/Intermediate/async-javascript/callbacks","unlisted":false},{"type":"link","label":"JS Asynchronous Operations","href":"/reference/docs/Javascript/Intermediate/async-javascript/asynchronous-operations","docId":"Javascript/Intermediate/async-javascript/asynchronous-operations","unlisted":false},{"type":"link","label":"JS Promises","href":"/reference/docs/Javascript/Intermediate/async-javascript/promises","docId":"Javascript/Intermediate/async-javascript/promises","unlisted":false},{"type":"link","label":"Asynchronous JavaScript","href":"/reference/docs/Javascript/Intermediate/async-javascript/async-await","docId":"Javascript/Intermediate/async-javascript/async-await","unlisted":false}],"href":"/reference/docs/Javascript/Intermediate/async-javascript/"},{"type":"link","label":"JSON and APIs","href":"/reference/docs/Javascript/Intermediate/json-apis","docId":"Javascript/Intermediate/json-apis","unlisted":false},{"type":"link","label":"Error Handling","href":"/reference/docs/Javascript/Intermediate/error-handling","docId":"Javascript/Intermediate/error-handling","unlisted":false},{"type":"link","label":"Final Projects","href":"/reference/docs/Javascript/Intermediate/final-projects","docId":"Javascript/Intermediate/final-projects","unlisted":false}],"href":"/reference/docs/Javascript/Intermediate"},{"type":"category","label":"Beginner","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"JavaScript Basics","href":"/reference/docs/Javascript/Beginner/introduction-to-javascript","docId":"Javascript/Beginner/introduction-to-javascript","unlisted":false},{"type":"link","label":"Variables and Data Types","href":"/reference/docs/Javascript/Beginner/variables-and-datatypes","docId":"Javascript/Beginner/variables-and-datatypes","unlisted":false},{"type":"link","label":"Operators in JavaScript","href":"/reference/docs/Javascript/Beginner/operators","docId":"Javascript/Beginner/operators","unlisted":false},{"type":"link","label":"Control Structures","href":"/reference/docs/Javascript/Beginner/control-structures","docId":"Javascript/Beginner/control-structures","unlisted":false},{"type":"link","label":"Loops","href":"/reference/docs/Javascript/Beginner/loops","docId":"Javascript/Beginner/loops","unlisted":false},{"type":"link","label":"Functions","href":"/reference/docs/Javascript/Beginner/functions","docId":"Javascript/Beginner/functions","unlisted":false},{"type":"link","label":"Arrays","href":"/reference/docs/Javascript/Beginner/arrays","docId":"Javascript/Beginner/arrays","unlisted":false},{"type":"link","label":"Objects","href":"/reference/docs/Javascript/Beginner/objects","docId":"Javascript/Beginner/objects","unlisted":false},{"type":"link","label":"Fun Beginner Projects","href":"/reference/docs/Javascript/Beginner/projects","docId":"Javascript/Beginner/projects","unlisted":false}]}]},{"type":"category","label":"React","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"patterns","href":"/reference/docs/React/patterns","docId":"React/patterns","unlisted":false},{"type":"link","label":"setup","href":"/reference/docs/React/setup","docId":"React/setup","unlisted":false}]},{"type":"category","label":"Typescript","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"TypeScript Introduction","href":"/reference/docs/Typescript/intro","docId":"Typescript/intro","unlisted":false},{"type":"link","label":"TypeScript Tips & Best Practices","href":"/reference/docs/Typescript/tips","docId":"Typescript/tips","unlisted":false}]},{"type":"category","label":"react-native","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"React Native Components","href":"/reference/docs/react-native/components","docId":"react-native/components","unlisted":false},{"type":"link","label":"React Native Setup","href":"/reference/docs/react-native/setup","docId":"react-native/setup","unlisted":false}]}]},"docs":{"getting-started":{"id":"getting-started","title":"Getting Started","description":"Welcome to the ultimate guide for JavaScript, TypeScript, React, and React Native development! Whether you're building dynamic web apps or cross-platform mobile applications, this documentation has you covered with clear, practical resources.","sidebar":"tutorialSidebar"},"Javascript/Beginner/arrays":{"id":"Javascript/Beginner/arrays","title":"Arrays","description":"Hey, code rockstar! 🎸 You've got functions nailed, so now let’s dive into arrays—your go-to tool for storing lists of stuff. T#### What's Next?","sidebar":"tutorialSidebar"},"Javascript/Beginner/control-structures":{"id":"Javascript/Beginner/control-structures","title":"Control Structures","description":"Whoa, code adventurer! 🧭 You've mastered operators, so now let's give your programs a brain—control structures! These are like choose-your-own-adventure books for code: they let your script make decisions based on conditions. No more straight-line code; now it can branch out, skip parts, or choose paths.","sidebar":"tutorialSidebar"},"Javascript/Beginner/functions":{"id":"Javascript/Beginner/functions","title":"Functions","description":"Hey, code ninja! 🥷 You're looping like a champ—now let's talk functions, the superheroes of reusable code. Functions let you bu#### WFunctions are your code's superpowers—reusable and awesome! Next, we'll tackle arrays to store lists of data. Dash to Arrays to keep rocking it. You're coding like a pro—keep shining! 💥at's Next?","sidebar":"tutorialSidebar"},"Javascript/Beginner/introduction-to-javascript":{"id":"Javascript/Beginner/introduction-to-javascript","title":"JavaScript Basics","description":"Hey there, future coder! 🚀 Welcome to the magical world of JavaScript (often just called JS). If you're new to programming, don't worry—we're starting from the very beginning. Think of JavaScript as the secret sauce that makes websites come alive: buttons that respond when you click them, forms that check your input, and even games right in your browser.","sidebar":"tutorialSidebar"},"Javascript/Beginner/loops":{"id":"Javascript/Beginner/loops","title":"Loops","description":"Greetings, loop master in training! 🔄 You've got decisions down pat—now let's add repetition to the mix. Loops are like your code's treadmill: they run the same block over and over until a condition says \"stop!\" Why? To handle lists, count things, or repeat actions without copying code a zillion times. Imagine printing \"Hello\" 100 times manually—boring! Loops make it effortless.","sidebar":"tutorialSidebar"},"Javascript/Beginner/objects":{"id":"Javascript/Beginner/objects","title":"Objects","description":"Hey, coding superstar! 🌟 You've conquered arrays, and now it’s time to meet #### WObjects are your data superheroes, organizing everything neatly! You've now got the beginner basics down—variables, loops, functions, arrays, and objects. Time to put it all together with some fun projects! Jump to Beginner Projects to build a Digital Dice Roller, Random Joke Generator, and Simple Calculator. You're ready to create—let's do this! 🎉at's Next?","sidebar":"tutorialSidebar"},"Javascript/Beginner/operators":{"id":"Javascript/Beginner/operators","title":"Operators in JavaScript","description":"Hey, code explorer! 🌍 You've got variables and data types under your belt—now it's time to make them dance with operators. Operators are like the tools in your coding toolbox: they let you add, compare, and combine things in fun ways. Think of them as math symbols on steroids, but for all kinds of data.","sidebar":"tutorialSidebar"},"Javascript/Beginner/projects":{"id":"Javascript/Beginner/projects","title":"Fun Beginner Projects","description":"Wow, you’ve made it through the JavaScript basics—time to celebrate by building something awesome! 🎉 These three mini-projects—Digital Dice Roller, Random Joke Generator, and Simple Calculator—will put your ski#### WYou've built three awesome projects—dice, jokes, and math! You're ready for more challenges. Head to Intermediate JavaScript for topics like callbacks, promises, and DOM deep-dives. Or, keep building with more projects in Advanced Projects. You're a coding hero—keep it up! 🦸‍♂️at's Next?","sidebar":"tutorialSidebar"},"Javascript/Beginner/variables-and-datatypes":{"id":"Javascript/Beginner/variables-and-datatypes","title":"Variables and Data Types","description":"Hello again, aspiring JavaScript wizard! 🌟 If you've made it here from the basics, pat yourself on the back—you're already writing code that runs in the browser. Now, let's level up by learning how to store and work with information in JS. Think of this as packing your backpack for a coding adventure: variables are your bags, and data types are the stuff you put inside.","sidebar":"tutorialSidebar"},"Javascript/Intermediate/advanced-functions":{"id":"Javascript/Intermediate/advanced-functions","title":"Advanced Functions","description":"You’ve conquered the basics—variables, loops, arrays, objects, and functions—and now it’s time to supercharge your functions with some intermediate magic. Functions are the heart of JavaScript, and these advanced techniques will make them more powerful, flexible, and fun to use. Think of this as upgrading your coding toolbox with shiny new gadgets!","sidebar":"tutorialSidebar"},"Javascript/Intermediate/async-javascript/async-await":{"id":"Javascript/Intermediate/async-javascript/async-await","title":"Asynchronous JavaScript","description":"Hey, time-traveling coder! ⏰ You’ve mastered DOM manipulation and ES6+ features—now it’s time to conquer asynchronous JavaScript, the magic that lets your code handle tasks that take time, like fetching data, waiting for timers, or responding to user clicks without freezing the page. JavaScript is single-threaded (one task at a time), but async tricks make it feel multitasking!","sidebar":"tutorialSidebar"},"Javascript/Intermediate/async-javascript/asynchronous-operations":{"id":"Javascript/Intermediate/async-javascript/asynchronous-operations","title":"JS Asynchronous Operations","description":"Time to peek behind the curtain! ⏰ You've learned about callbacks, but how does JavaScript actually handle asynchronous operations? Let's explore timers, events, and the magical event loop that makes it all work. Understanding this will make you a better async programmer!","sidebar":"tutorialSidebar"},"Javascript/Intermediate/async-javascript/callbacks":{"id":"Javascript/Intermediate/async-javascript/callbacks","title":"JS Callbacks","description":"Welcome to the world of callbacks! 📞 You've actually used these before in our advanced functions section, but now we're diving deeper into their async superpowers. Callbacks are the OG way to handle tasks that take time—they're functions passed to other functions to run when something finishes (or fails).","sidebar":"tutorialSidebar"},"Javascript/Intermediate/async-javascript/index":{"id":"Javascript/Intermediate/async-javascript/index","title":"Asynchronous Js","description":"Hey, time-traveling coder! ⏰ You've mastered DOM manipulation and ES6+ features—now it's time to conquer asynchronous JavaScript, the magic that lets your code handle tasks that take time, like fetching data, waiting for timers, or responding to user clicks without freezing the page. JavaScript is single-threaded (one task at a time), but async tricks make it feel multitasking!","sidebar":"tutorialSidebar"},"Javascript/Intermediate/async-javascript/promises":{"id":"Javascript/Intermediate/async-javascript/promises","title":"JS Promises","description":"Welcome to the Promise land! 🌟 After wrestling with callback hell, Promises are like a breath of fresh air. They represent a value that might be available now, later, or never. Think of a Promise as a receipt for your coffee order—it's either fulfilled (coffee ready!), rejected (sorry, we're out!), or still pending (brewing...).","sidebar":"tutorialSidebar"},"Javascript/Intermediate/dom-manipulation":{"id":"Javascript/Intermediate/dom-manipulation","title":"DOM Manipulation","description":"You’ve got functions, arrays, and objects down, and now it’s time to take control of web pages with DOM manipulation. The Document Object Model (DOM) is like a bridge between your JavaScript code and the HTML/CSS on a page. It turns your webpage into a living, breathing thing you can change on the fly—think updating text, styling buttons, or adding new elements with a click.","sidebar":"tutorialSidebar"},"Javascript/Intermediate/error-handling":{"id":"Javascript/Intermediate/error-handling","title":"Error Handling","description":"You’re fetching data and manipulating the DOM like a champ, but sometimes things go wrong—invalid inputs, network failures, or pesky bugs. That’s where error handling comes in, saving your app from crashing and keeping users happy. Think of it as your code’s safety net, catching problems before they spiral out of control.","sidebar":"tutorialSidebar"},"Javascript/Intermediate/es6-features":{"id":"Javascript/Intermediate/es6-features","title":"ES6+ Features","description":"You’re rocking the DOM and advanced functions—now it’s time to embrace the sleek, modern vibes of ES6+ (ECMAScript 2015 and later). These features, introduced starting in 2015, make JavaScript more powerful and fun to write. Think of them as upgrades to your coding spaceship: faster, smoother, and packed with cool tricks.","sidebar":"tutorialSidebar"},"Javascript/Intermediate/final-projects":{"id":"Javascript/Intermediate/final-projects","title":"Final Projects","description":"🎉 Congratulations, JavaScript Master! You've conquered variables, functions, DOM manipulation, ES6+, async programming, and error handling. Now it's time to put it all together with some epic final projects that will challenge your skills and build your portfolio!","sidebar":"tutorialSidebar"},"Javascript/Intermediate/index":{"id":"Javascript/Intermediate/index","title":"Intermediate","description":"Welcome back, JavaScript warrior! 🚀 You've conquered the basics—variables, functions, loops, and objects. Now it's time to level up with intermediate concepts that will transform you from a beginner into a confident developer ready to build real-world applications.","sidebar":"tutorialSidebar"},"Javascript/Intermediate/json-apis":{"id":"Javascript/Intermediate/json-apis","title":"JSON and APIs","description":"You’ve mastered async JavaScript, so now it’s time to talk to the world using JSON and APIs. JSON (JavaScript Object Notation) is like a universal language for data—lightweight, readable, and used everywhere from apps to servers. APIs (Application Programming Interfaces) are like doorways to fetch or send that data, letting your app grab jokes, weather, or user info from the internet.","sidebar":"tutorialSidebar"},"react-native/components":{"id":"react-native/components","title":"React Native Components","description":"Basic Components","sidebar":"tutorialSidebar"},"react-native/setup":{"id":"react-native/setup","title":"React Native Setup","description":"Prerequisites","sidebar":"tutorialSidebar"},"React/patterns":{"id":"React/patterns","title":"patterns","description":"","sidebar":"tutorialSidebar"},"React/setup":{"id":"React/setup","title":"setup","description":"","sidebar":"tutorialSidebar"},"Typescript/intro":{"id":"Typescript/intro","title":"TypeScript Introduction","description":"What is TypeScript?","sidebar":"tutorialSidebar"},"Typescript/tips":{"id":"Typescript/tips","title":"TypeScript Tips & Best Practices","description":"Generic Types","sidebar":"tutorialSidebar"}}}}